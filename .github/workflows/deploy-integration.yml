name: Deploy to Integration

on:
  push:
    branches:
      - master
    paths:
      - 'platform/wab/**'
      - 'terraform/**'
      - '.github/workflows/deploy-integration.yml'

jobs:
  build-and-deploy:
    name: Build Docker Image and Deploy
    runs-on: ubuntu-latest
    environment: integration
    permissions:
      contents: read   # Read repo contents
      id-token: write  # Required for AWS OIDC authentication

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build the Docker image
          docker build \
            --platform linux/amd64 \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -f platform/wab/Dockerfile \
            platform/

          # Push to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          echo "Pushed image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Generate Terraform configuration files
        working-directory: terraform
        env:
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
          TERRAFORM_STATE_BUCKET: ${{ vars.TERRAFORM_STATE_BUCKET }}
          TERRAFORM_LOCKS_TABLE: ${{ vars.TERRAFORM_LOCKS_TABLE }}
          HOSTED_ZONE_ID: ${{ vars.HOSTED_ZONE_ID }}
        run: |
          chmod +x generate-configs.sh
          ./generate-configs.sh
          echo "✅ Configuration files generated"

      - name: Deploy infrastructure with deploy-all.sh
        working-directory: terraform
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
          ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          # Pass image tag via TF_VAR environment variable (Terraform automatically picks this up)
          # All services use the same container image
          TF_VAR_container_image: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ github.sha }}
        run: |
          # Make script executable
          chmod +x scripts/deploy-all.sh

          echo "📦 Deploying with image tag: $IMAGE_TAG"
          echo "Environment: $ENVIRONMENT"
          echo "Container image: $TF_VAR_container_image"
          echo ""

          # Run the deploy-all script
          # Terraform automatically reads TF_VAR_* environment variables
          ./scripts/deploy-all.sh $ENVIRONMENT

          echo "✅ Infrastructure deployed successfully!"

      - name: Deployment summary
        if: success()
        run: |
          echo "### ✅ Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ vars.ENVIRONMENT }}" >> $GITHUB_STEP_SUMMARY
          echo "**Image Tag:** \`${GITHUB_SHA:0:8}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Full SHA:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Deployed Infrastructure:**" >> $GITHUB_STEP_SUMMARY
          echo "- All Terraform projects via deploy-all.sh" >> $GITHUB_STEP_SUMMARY
          echo "- Services: WAB, Data, Codegen, Copilot" >> $GITHUB_STEP_SUMMARY

      - name: Notify on failure
        if: failure()
        run: |
          echo "### ❌ Deployment Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ vars.ENVIRONMENT }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${GITHUB_SHA:0:8}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the workflow logs for details."
